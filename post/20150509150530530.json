{"id":"20150509150530530","content":"Code example extracted from Stack Overflow:\r\n\r\npublic static synchronized void playSound(final String url) {\r\n  new Thread(new Runnable() {\r\n  \/\/ The wrapper thread is unnecessary, unless it blocks on the\r\n  \/\/ Clip finishing; see comments.\r\n    public void run() {\r\n      try {\r\n        Clip clip = AudioSystem.getClip();\r\n        AudioInputStream inputStream = AudioSystem.getAudioInputStream(\r\n          Main.class.getResourceAsStream(\"\/path\/to\/sounds\/\" + url));\r\n        clip.open(inputStream);\r\n        clip.start(); \r\n      } catch (Exception e) {\r\n        System.err.println(e.getMessage());\r\n      }\r\n    }\r\n  }).start();\r\n}\r\nRelated APIs:\r\nThe answer uses 4 API classes, you can use the following links to see more code examples.\r\n\r\n- javax.sound.sampled.AudioInputStream\r\n- java.lang.String\r\n- javax.sound.sampled.AudioSystem\r\n- java.lang.System\r\nIf you need more contextual information, you can go to the original post. This question was asked by Pek. You can go to his\/her website. The accepted answer is provided by Pek. Here is his\/her website.","author":"Java","title":"Play","toapprove":[],"comments":["dileepa"]}